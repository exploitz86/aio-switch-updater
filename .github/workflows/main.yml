name: Build AIO-switch-updater

on: 
  push:
    tags:
      - 'v*'     # Triggers on version tags like v2.24.0
      - '[0-9]*' # Triggers on version tags like 1.00.0
  workflow_dispatch:  # Manual trigger

jobs:
  AIO-switch-updater:
    runs-on: ubuntu-latest
    #container: hamletdufromage/devkita64_devkitarm
    container: devkitpro/devkita64
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive
        fetch-depth: 0

    - name: update repo
      run: |
        git config --global --add safe.directory /__w/aio-switch-updater/aio-switch-updater/lib/borealis
        git config --global --add safe.directory /__w/aio-switch-updater/aio-switch-updater
        git config --global --add safe.directory /__w/aio-switch-updater/aio-switch-updater/TegraExplorer

    - name: setup environment and verify tools
      run: |
        # Set environment variables
        export DEVKITPRO=/opt/devkitpro
        export DEVKITA64=/opt/devkitpro/devkitA64
        export LIBNX=/opt/devkitpro/libnx
        export PORTLIBS=/opt/devkitpro/portlibs/switch
        
        # Verify devkitA64 is available
        echo "Checking devkitA64..."
        ls -la /opt/devkitpro/devkitA64/bin/aarch64-none-elf-gcc
        
        # Verify libnx is available
        echo "Checking libnx..."
        ls -la /opt/devkitpro/libnx/
        
        # Check what packages are already installed
        echo "Installed devkitPro packages:"
        dkp-pacman -Q | grep -E "(switch|libnx)" || echo "Package query failed, but tools should be available"

    - name: Extract version from tag or Makefile
      id: version
      shell: bash
      run: |
        if [ "${{ github.event_name }}" = "push" ] && echo "${{ github.ref }}" | grep -q "refs/tags/"; then
          # Handle both v1.00.0 and 1.00.0 tag formats
          if echo "${{ github.ref }}" | grep -q "refs/tags/v"; then
            VERSION=$(echo "${{ github.ref }}" | sed 's/refs\/tags\/v//')
          else
            VERSION=$(echo "${{ github.ref }}" | sed 's/refs\/tags\///')
          fi
        else
          # Extract from Makefile, handle potential whitespace/tabs
          VERSION=$(grep "^APP_VERSION" Makefile | head -1 | sed 's/.*:=[[:space:]]*//' | tr -d '\t ')
        fi
        # Ensure VERSION is not empty
        if [ -z "$VERSION" ]; then
          VERSION="1.00.1"
          echo "Warning: Could not extract version, using default: $VERSION"
        fi
        echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
        echo "Building version: $VERSION"

    - name: Update version in Makefile
      shell: bash
      run: |
        sed -i "s/APP_VERSION :=.*/APP_VERSION := ${{ steps.version.outputs.VERSION }}/" Makefile
        echo "Updated Makefile version to: ${{ steps.version.outputs.VERSION }}"
        # Verify the update
        grep "APP_VERSION" Makefile

    - name: Building aio-switch-updater
      run: |
        export DEVKITPRO=/opt/devkitpro
        export DEVKITA64=/opt/devkitpro/devkitA64
        export LIBNX=/opt/devkitpro/libnx
        export PORTLIBS=/opt/devkitpro/portlibs/switch
        
        make -C aiosu-forwarder -f Makefile
        make -j$(nproc)
        
        # Verify build outputs
        ls -la aio-switch-updater.nro
        ls -la aio-switch-updater.nacp

    - name: Create release package
      run: |
        # Create release directory structure
        mkdir -p release/switch/aio-switch-updater
        
        # Copy only the .nro file
        cp aio-switch-updater.nro release/switch/aio-switch-updater/
        
        # Create the release archive
        cd release
        zip -r ../aio-switch-updater.zip .
        cd ..
        
        echo "Release package created:"
        ls -la aio-switch-updater.zip
        echo "Contents:"
        unzip -l aio-switch-updater.zip

    - name: Generate changelog
      id: changelog
      shell: bash
      run: |
        # Get commit messages since last tag for changelog
        if git describe --tags --abbrev=0 HEAD^ >/dev/null 2>&1; then
          LAST_TAG=$(git describe --tags --abbrev=0 HEAD^)
          CHANGELOG=$(git log --pretty=format:"- %s" $LAST_TAG..HEAD)
        else
          CHANGELOG="- Initial release"
        fi
        
        # Create changelog file
        cat > CHANGELOG.md << EOF
        ## Changes in v${{ steps.version.outputs.VERSION }}
        
        $CHANGELOG
        
        ## Installation
        1. Download \`aio-switch-updater.zip\`
        2. Extract to the root of your SD card
        3. Launch from the Homebrew Menu
        EOF

    - name: Create Draft Release (Tag Push)
      uses: softprops/action-gh-release@v1
      if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
      with:
        draft: true
        prerelease: false
        name: "AIO Switch Updater v${{ steps.version.outputs.VERSION }}"
        body_path: CHANGELOG.md
        files: aio-switch-updater.zip
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Create Draft Release (Manual Trigger)
      uses: softprops/action-gh-release@v1
      if: github.event_name == 'workflow_dispatch'
      with:
        draft: true
        prerelease: false
        tag_name: "v${{ steps.version.outputs.VERSION }}-build-${{ github.run_number }}"
        name: "AIO Switch Updater v${{ steps.version.outputs.VERSION }} (Build ${{ github.run_number }})"
        body_path: CHANGELOG.md
        files: aio-switch-updater.zip
        token: ${{ secrets.GITHUB_TOKEN }}
        
    - uses: actions/upload-artifact@v4
      with:
        name: aio-switch-updater-v${{ steps.version.outputs.VERSION }}
        path: aio-switch-updater.zip
        retention-days: 90
